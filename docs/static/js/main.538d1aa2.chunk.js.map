{"version":3,"sources":["components/ClientNew.tsx","components/ClientCard.tsx","components/ClientList.tsx","components/FormInput.tsx","components/FormCountrySelect.tsx","components/ClientDetail.tsx","services/localStorage.js","services/clients.js","components/App.tsx","index.tsx"],"names":["ClientNew","className","to","ClientCard","props","countryName","countryList","getName","client","country","name","lastName","href","email","id","onClick","removeClient","ClientList","renderClientsItems","clients","map","length","FormInput","htmlFor","label","type","value","pattern","required","onChange","ev","handleInput","target","FormSelect","handleSelect","countries","getNameList","result","countryCode","push","renderOptions","ClientDetail","useState","setName","setLastName","setEmail","setCountry","onSubmit","preventDefault","isEdit","setClient","createClient","window","history","back","FormCountrySelect","localStorageKey","objectToExport","get","defaultData","data","localStorage","getItem","JSON","parse","set","setItem","stringify","getAll","clientId","find","create","newClients","newClient","uuidv4","foundClient","remove","foundClientIndex","findIndex","splice","sortByLastName","sort","clientA","clientB","clientALastName","toLowerCase","clientBLastName","App","clientsService","setClients","sortedClients","exact","path","confirm","render","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538d1aa2.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport '../styles/layout/clientNew.scss';\r\n\r\nfunction ClientNew(): JSX.Element {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__btnNew\">\r\n        <Link className=\"footer__btnNew--link\" to=\"/detail/new\">\r\n          +\r\n        </Link>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default ClientNew;\r\n","import { Link } from 'react-router-dom';\r\n\r\n//libraries\r\nimport countryList from 'country-list';\r\n\r\n//styles\r\nimport '../styles/layout/clientCard.scss';\r\n\r\nfunction ClientCard(props:any):JSX.Element {\r\n  //Function to get country names\r\n  const countryName: string | undefined = countryList.getName(props.client.country);\r\n  return (\r\n    <article className=\"clientCard\">\r\n      <h3 className=\"clientCard__name\">{props.client.name}</h3>\r\n      <h3 className=\"clientCard__lastName\">{props.client.lastName}</h3>\r\n      <a className=\"clientCard__email\" \r\n         href={`mailto:${props.client.email}`}>\r\n         {props.client.email}</a>\r\n      <h3 className=\"clientCard__country\">{countryName}</h3>\r\n      <section className=\"btnSection\">\r\n        <button className=\"btnSection__btnEdit\">\r\n          <Link //Goes to form page\r\n            className=\"btnSection__btnEdit--link\"\r\n            to={`/detail/${props.client.id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </button>\r\n        <button\r\n          className=\"btnSection__btnRemove far fa-trash-alt\"\r\n          onClick={() => {\r\n            props.removeClient(props.client.id);\r\n          }}\r\n        ></button>\r\n      </section>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ClientCard;\r\n","//Components\r\nimport ClientNew from './ClientNew';\r\nimport ClientCard from './ClientCard';\r\n\r\n//Styles\r\nimport '../styles/layout/clientList.scss';\r\n\r\nfunction ClientList(props: { clients: any[]; removeClient: (arg0: any) => void; }) {\r\n  const renderClientList = () => {\r\n    return (\r\n      <>\r\n        <h1 className=\"clientListTitle\">Client list</h1>\r\n        <ul className=\"clientList\">{renderClientsItems()}</ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n//Paint every item of the list by travelling around the array\r\n  const renderClientsItems = () => {\r\n    return props.clients.map((client) => {\r\n      return (\r\n        <li key={client.id} className=\"clientItem\">\r\n          <ClientCard\r\n            client={client}\r\n            removeClient={() => {\r\n              props.removeClient(client.id);\r\n            }}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  //Paint a message in case there are no clients yet.\r\n  const renderNewClient = () => {\r\n    return (\r\n      <div className=\"listContainer\">\r\n        <header className=\"listContainer__header\">\r\n          <h1 className=\"listContainer__header--title\">\r\n            There are no registered clients.\r\n          </h1>\r\n          <h2 className=\"listContainer__header--title\">\r\n            Click on the button below to create a new one.\r\n          </h2>\r\n        </header>\r\n        <ClientNew />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"listContainer\">\r\n      {props.clients.length ? renderClientList() : renderNewClient()} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClientList;\r\n","function FormInput(props: any) {\r\n  const handleInput = (ev: { target: { value: any; }; }) => {\r\n    props.handleInput(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"form__label\" htmlFor={props.id}>\r\n        {props.label}\r\n      </label>\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        id={props.id}\r\n        value={props.value}\r\n        pattern={props.pattern}\r\n        required={props.required}\r\n        onChange={handleInput}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormInput;\r\n","import countryList from 'country-list';\r\n\r\nfunction FormSelect(props:any): JSX.Element {\r\n  const handleSelect = (ev: { target: { value: any; }; }) =>  {\r\n    props.handleSelect(ev.target.value);\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    const countries = countryList.getNameList();\r\n    const result:any[] = [];\r\n    for (const countryName in countries) {\r\n      const countryCode = countries[countryName];\r\n      result.push(\r\n        <option key={countryCode} value={countryCode}>\r\n          {countryList.getName(countryCode)}\r\n        </option>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"form__label\">{props.label}</label>\r\n      <select\r\n        className=\"form__input\"\r\n        value={props.value}\r\n        onChange={handleSelect}\r\n      >\r\n        {renderOptions()}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormSelect;\r\n","import React, { useState } from 'react';\r\n\r\n//Components\r\nimport FormInput from './FormInput';\r\nimport FormCountrySelect from './FormCountrySelect';\r\n\r\n//Styles\r\nimport '../styles/layout/clientDetail.scss';\r\n\r\nfunction ClientDetail(props:any) {\r\n  //Initial state of client properties\r\n  const [name, setName] = useState<string>(props.client?.name || '');\r\n  const [lastName, setLastName] = useState<string>(props.client?.lastName || '');\r\n  const [email, setEmail] = useState<string>(props.client?.email || '');\r\n  const [country, setCountry] = useState<string>(props.client?.country || '');\r\n\r\n  const handleSubmit = (ev:any) => {\r\n    ev.preventDefault(); //Avoid the form sending by default\r\n    if (props.isEdit) {\r\n      props.setClient(props.client.id, {\r\n        name: name,\r\n        lastName: lastName,\r\n        email: email,\r\n        country: country,\r\n      });\r\n    } else {\r\n      props.createClient({\r\n        name: name,\r\n        lastName: lastName,\r\n        email: email,\r\n        country: country,\r\n      });\r\n    }\r\n    window.history.back(); // Back to home page\r\n  };\r\n\r\n  //Regular expression to validate mail\r\n  const emailRegexValidator =\r\n    '^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$';\r\n\r\n  return (\r\n    <main className=\"formContainer\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"First name:\"\r\n          id=\"name\"\r\n          required\r\n          value={name}\r\n          handleInput={setName}\r\n        />\r\n        <FormInput\r\n          label=\"Last name:\"\r\n          id=\"lastName\"\r\n          value={lastName}\r\n          required\r\n          handleInput={setLastName}\r\n        />\r\n        <FormInput\r\n          label=\"Email:\"\r\n          id=\"email\"\r\n          required\r\n          value={email}\r\n          pattern={emailRegexValidator}\r\n          handleInput={setEmail}\r\n        />\r\n        <FormCountrySelect\r\n          label=\"Country:\"\r\n          value={country}\r\n          handleSelect={setCountry}\r\n        />\r\n        <section className=\"form__submitSection\">\r\n          <input\r\n            className=\"form__submit btnCancel \"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => window.history.back()}\r\n          />\r\n          <input\r\n            className=\"form__submit btnCreate\"\r\n            type=\"submit\"\r\n            value={props.isEdit ? 'Save' : 'Create'}\r\n          />\r\n        </section>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ClientDetail;\r\n","const localStorageKey = 'data';\r\n\r\nconst get = (defaultData) => {\r\n  const data = localStorage.getItem(localStorageKey);\r\n  return data === null ? defaultData : JSON.parse(data);\r\n};\r\n\r\nconst set = (data) => {\r\n  localStorage.setItem(localStorageKey, JSON.stringify(data));\r\n};\r\n\r\nconst objectToExport = {\r\n  get,\r\n  set,\r\n};\r\n\r\nexport default objectToExport;\r\n","import { v4 as uuidv4 } from 'uuid'; //create random id\r\nimport localStorage from '../services/localStorage';\r\n\r\nconst getAll = () => {\r\n  return localStorage.get([]);\r\n};\r\n\r\nconst get = (clients, clientId) => {\r\n  const newClients = [...clients];\r\n  return newClients.find((client) => client.id === clientId);\r\n};\r\n\r\nconst create = (clients, client) => {\r\n  const newClients = [...clients];\r\n  const newClient = { ...client };\r\n  newClient.id = uuidv4();\r\n  newClients.push(newClient);\r\n  localStorage.set(newClients);\r\n  return newClients;\r\n};\r\n\r\nconst set = (clients, clientId, client) => {\r\n  const newClients = [...clients];\r\n  const foundClient = newClients.find((client) => client.id === clientId);\r\n  foundClient.name = client.name;\r\n  foundClient.lastName = client.lastName;\r\n  foundClient.email = client.email;\r\n  foundClient.country = client.country;\r\n  localStorage.set(newClients);\r\n  return newClients;\r\n};\r\n\r\nconst remove = (clients, clientId) => {\r\n  const newClients = [...clients];\r\n  const foundClientIndex = newClients.findIndex(\r\n    (client) => client.id === clientId\r\n  );\r\n  newClients.splice(foundClientIndex, 1);\r\n  localStorage.set(newClients);\r\n  return newClients;\r\n};\r\n\r\nconst sortByLastName = (clients) => {\r\n  return clients.sort((clientA, clientB) => {\r\n    const clientALastName = clientA.lastName.toLowerCase();\r\n    const clientBLastName = clientB.lastName.toLowerCase();\r\n    if (clientALastName < clientBLastName) {\r\n      return -1;\r\n    } else if (clientALastName > clientBLastName) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n};\r\n\r\nconst objectToExport = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  set,\r\n  remove,\r\n  sortByLastName,\r\n};\r\n\r\nexport default objectToExport;\r\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// components\nimport ClientList from './ClientList';\nimport ClientDetail from './ClientDetail';\nimport ClientNew from './ClientNew';\n\n// services\nimport clientsService from '../services/clients';\n\n\n//Interface for const client\nexport type clientObj = {\n  id: number\n  name: string;\n  lastName: string;\n  email: string;\n  country: string;\n};\n\n\n\n//Fuctional component\nfunction App(): JSX.Element {\n  const [clients, setClients] = useState<clientObj[]>(clientsService.getAll());\n\n\n  //Create a new client and save it into the array\n  const createClient = (client: object) => {\n    const newClients: any[] = clientsService.create(clients, client);\n    setClients(newClients);\n  };\n\n\n  //Modify client's data and save it into the array \n  const setClient = (clientId: number, client: object) => {\n    const newClients: any[] = clientsService.set(clients, clientId, client);\n    setClients(newClients);\n  };\n\n  //Alert for the user to rethink delete one client, if it's confirmed then remove client and his data from the array\n  const removeClient = (clientId: number) => {\n    if (window.confirm('Are you sure? This action will permanently delete this client from the list.')) { const newClients: any[] = clientsService.remove(clients, clientId);\n    setClients(newClients);\n    }window.history.back(); }; \n \n  //Route to go to detail card of one client, in order to modify all or some of them.\n  const renderClientDetail = (props: { match: { params: { clientId: any; }; }; }) => {\n    const clientId: any = props.match.params.clientId;\n    const client: any = clientsService.get(clients, clientId);\n    return <ClientDetail isEdit={true} client={client} setClient={setClient} />;\n  };\n\n  //Call the function to order alphabetically\n  const sortedClients = clientsService.sortByLastName(clients);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {/*  to go strictly home */}\n        <ClientList clients={sortedClients} removeClient={removeClient} />\n        <ClientNew />\n      </Route>\n      <Route path=\"/detail/new\">\n        <ClientDetail isEdit={false} createClient={createClient} />\n      </Route>\n      {/*  dinamic route to go to links in a SPA and share link in browser */}\n      <Route path=\"/detail/:clientId\" render={renderClientDetail} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}